(()=>{"use strict";var e={813:(e,t,n)=>{n.d(t,{Z:()=>s});var r=function(e){var t="00:00";if(e){var n={minimumIntegerDigits:2,useGrouping:!1},r=~~(e/3600).toLocaleString("en-US",n),a=~~(e%3600/60).toLocaleString("en-US",n),i=(~~e%60).toLocaleString("en-US",n);t=r>0?r+":"+a+":"+i:a+":"+i}return t},a=function(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{d(r.next(e))}catch(e){i(e)}}function o(e){try{d(r.throw(e))}catch(e){i(e)}}function d(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,o)}d((r=r.apply(e,t||[])).next())}))},i=function(e,t){var n,r,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!((a=(a=s.trys).length>0&&a[a.length-1])||6!==i[0]&&2!==i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}};const s=function(){function e(e){this.duration=0,this.currentTime=0,this.leftSectionID="player-left-section",this.rightSectionID="player-right-section",this.centerSectionID="player-center-section",this.shrinked=!1,this.looped=!1,this.status="stopped";var t,n=document.getElementById(e.nodeID);n?this.playerNode=n:new Error("The provided video element does not exist!"),this.width=e.width,this.height=e.height?e.height:"auto",this.listeners=(t=this,{play:function(e){e.preventDefault(),t.playerNode.play();var n=t.createPlayPauseBtn("pause");t.swapPlayPauseBtn(n),t.status="playing"},pause:function(){t.playerNode.pause();var e=t.createPlayPauseBtn("play");t.swapPlayPauseBtn(e),t.status="paused"},stop:function(){t.playerNode.pause();var e=t.createPlayPauseBtn("play");t.swapPlayPauseBtn(e),t.playerNode.currentTime=0,t.status="stopped"},seek:function(e){var n=e.target;t.playerNode.currentTime=parseInt(n.value)},toggleRepeat:function(){var e=document.getElementById("rp-btn");t.looped?(t.playerNode.loop=!1,t.looped=!1,e.classList.remove("repeated")):(t.playerNode.loop=!0,t.looped=!0,e.classList.add("repeated"))},toggleFullscreen:function(){var e=t.playerNode;e.requestFullscreen&&e.requestFullscreen()},fastForward:function(){var e=t.playerNode.currentTime;t.playerNode.currentTime=e+2},fastBack:function(){var e=t.playerNode.currentTime;t.playerNode.currentTime=e-2},onTimeUpdate:function(){var e=t.playerNode.currentTime;document.getElementById("seeker-input").value=e.toFixed().toString(),document.getElementById("current-time").textContent=r(e)}})}return e.prototype.mount=function(){return a(this,void 0,void 0,(function(){var e,t=this;return i(this,(function(n){switch(n.label){case 0:return[4,this.buildComponents()];case 1:return n.sent(),this.observeSize(),e=setInterval((function(){t.playerNode.readyState>0&&(t.duration=t.playerNode.duration,document.getElementById("seeker-input").setAttribute("max",t.duration.toFixed().toString()),document.getElementById("total-duration").textContent=r(t.duration),clearInterval(e))}),200),this.playerNode.addEventListener("timeupdate",this.listeners.onTimeUpdate),this.playerNode.addEventListener("ended",(function(){t.looped||t.listeners.stop()})),[2]}}))}))},e.prototype.buildComponents=function(){return a(this,void 0,void 0,(function(){var e,t,n;return i(this,(function(r){return(e=document.createElement("div")).classList.add("bcp-wrapper"),t=this.playerNode.cloneNode(!0),e.style.width=this.width,e.style.height=this.height,e.appendChild(t),this.playerNode.replaceWith(e),this.playerNode=t,this.playerWrapper=e,n=this.buildControls(),e.appendChild(n),[2]}))}))},e.prototype.buildControls=function(){var e=document.createElement("div");e.classList.add("bcp-controls");var t=this.createSeeker();e.appendChild(t);var n=this.createVideoCtrlBox();return e.appendChild(n),e},e.prototype.createSeeker=function(){var e=document.createElement("div");e.classList.add("seeker-container");var t=document.createElement("input");return t.classList.add("seeker-slider"),t.id="seeker-input",t.setAttribute("type","range"),t.setAttribute("min","0"),t.value="0",t.addEventListener("input",this.listeners.seek),e.appendChild(t),e},e.prototype.createVideoCtrlBox=function(){var e=document.createElement("div");e.classList.add("control-buttons-container");var t=this.createVolumeCtrl(),n=this.createPlaybackCtrl(),r=this.createOtherButtons();return e.appendChild(t),e.appendChild(n),e.appendChild(r),e},e.prototype.createVolumeCtrl=function(){var e=document.createElement("div");e.classList.add("cbc-left-section"),e.id=this.leftSectionID;var t=document.createElement("div");t.classList.add("speaker-icon","player-icon");var n=document.createElement("i");n.classList.add("fa-solid","fa-volume-high"),t.appendChild(n);var r=document.createElement("input");return r.setAttribute("type","range"),r.classList.add("volume-ctrl-slider"),e.appendChild(t),e.appendChild(r),e},e.prototype.createPlaybackCtrl=function(){var e=document.createElement("div");e.classList.add("cbc-center-section"),e.id=this.centerSectionID;var t=document.createElement("p");t.classList.add("time-display"),t.id="current-time",t.textContent="00:00";var n=this.createIcon();n.classList.add("fa","fa-backward","player-icon");var r=this.createBtn();r.classList.add("fb-btn"),r.appendChild(n),r.addEventListener("click",this.listeners.fastBack);var a=this.createPlayPauseBtn("play"),i=this.createIcon();i.classList.add("fa","fa-forward","player-icon");var s=this.createBtn();s.classList.add("ff-btn"),s.appendChild(i),s.addEventListener("click",this.listeners.fastForward);var o=t.cloneNode(!0);return o.id="total-duration",e.appendChild(t),e.appendChild(r),e.appendChild(a),e.appendChild(s),e.appendChild(o),e},e.prototype.createOtherButtons=function(){var e=document.createElement("div");e.classList.add("cbc-right-section"),e.id=this.rightSectionID;var t=this.createBtn();t.classList.add("stop-btn");var n=this.createIcon();n.classList.add("fa-solid","fa-stop","player-icon"),t.appendChild(n),t.addEventListener("click",this.listeners.stop);var r=this.createBtn();r.classList.add("rp-btn"),r.id="rp-btn";var a=this.createIcon();a.classList.add("fa-solid","fa-repeat"),r.appendChild(a),r.addEventListener("click",this.listeners.toggleRepeat);var i=this.createBtn();i.classList.add("fs-btn");var s=this.createIcon();return s.classList.add("fa-solid","fa-expand","player-icon"),i.appendChild(s),i.addEventListener("click",this.listeners.toggleFullscreen),e.appendChild(t),e.appendChild(r),e.appendChild(i),e},e.prototype.createBtn=function(){var e=document.createElement("div");return e.classList.add("pb-btn"),e},e.prototype.createIcon=function(){return document.createElement("i")},e.prototype.createPlayPauseBtn=function(e){var t=this.createIcon();t.classList.add("fa-solid","fa-".concat(e),"player-icon");var n=this.createBtn();n.id="play-pause-btn",n.classList.add("".concat(e,"-btn")),n.appendChild(t);var r="play"===e?this.listeners.play:this.listeners.pause;return n.addEventListener("click",r),n},e.prototype.swapPlayPauseBtn=function(e){document.getElementById("play-pause-btn").replaceWith(e)},e.prototype.observeSize=function(){var e=this;new ResizeObserver((function(t){var n=document.getElementById(e.leftSectionID),r=document.getElementById(e.rightSectionID),a=document.getElementById(e.centerSectionID);t[0].contentRect.width<520?(e.hide(n),e.hide(r),a.style.width="100%",e.shrinked=!0):e.shrinked&&(a.style.width="50%",e.show(n),e.show(r))})).observe(this.playerWrapper)},e.prototype.hide=function(e){e.classList.add("hide")},e.prototype.show=function(e){e.classList.remove("hide")},e}()}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,n),i.exports}n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),new(n(813).Z)({nodeID:"my-demo-video",width:"560px"}).mount()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,